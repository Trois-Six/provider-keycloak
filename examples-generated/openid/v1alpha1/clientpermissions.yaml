apiVersion: openid.crd.alt/v1alpha1
kind: ClientPermissions
metadata:
  annotations:
    meta.upbound.io/example-id: openid/v1alpha1/clientpermissions
  labels:
    testing.upbound.io/example-name: my_permission
  name: my-permission
spec:
  forProvider:
    clientIdSelector:
      matchLabels:
        testing.upbound.io/example-name: my_openid_client
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    viewScope:
    - decisionStrategy: UNANIMOUS
      description: my description
      policies:
      - ${keycloak_openid_client_user_policy.test.id}

---

apiVersion: openid.crd.alt/v1alpha1
kind: Client
metadata:
  annotations:
    meta.upbound.io/example-id: openid/v1alpha1/clientpermissions
  labels:
    testing.upbound.io/example-name: my_openid_client
  name: my-openid-client
spec:
  forProvider:
    accessType: CONFIDENTIAL
    clientId: my_openid_client
    clientSecretSecretRef:
      key: example-key
      name: example-secret
      namespace: upbound-system
    name: my_openid_client
    realmIdSelector:
      matchLabels:
        testing.upbound.io/example-name: realm
    standardFlowEnabled: true
    validRedirectUris:
    - http://localhost:8080/*

---

apiVersion: keycloak.crd.alt/v1alpha1
kind: Realm
metadata:
  annotations:
    meta.upbound.io/example-id: openid/v1alpha1/clientpermissions
  labels:
    testing.upbound.io/example-name: realm
  name: realm
spec:
  forProvider:
    realm: realm

---

apiVersion: keycloak.crd.alt/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: openid/v1alpha1/clientpermissions
  labels:
    testing.upbound.io/example-name: test
  name: test
spec:
  forProvider:
    email: test-user@fakedomain.com
    firstName: Testy
    lastName: Tester
    realmId: ${keycloak_realm.realm.id}
    username: test-user
